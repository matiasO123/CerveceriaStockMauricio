<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>